1.标签
在netty-rpc项目中，有3种类型的自定义标签：<nettyrpc:service/>、<nettyrpc:registry/>、<nettyrpc:reference/>。其中前两个用在服务器端。

<nettyrpc:service/>用来配置服务器可以供客户端调用的服务，有以下三个属性：
1.ref:服务具体实现类
2.interfaceName:服务实现的接口的名字
3.filter:过滤器

<nettyrpc:registry/>用来配置服务器的一些信息，有以下3个属性：
1.ipAddr:服务器监听客户端发起rpc调用的ip地址和端口号
2.echoApiPort:服务端服务能力展示开放端口(可以通过浏览器访问这个端口，获取服务端的信息)
3.protocol:传输数据所使用的序列化协议

2.启动的过程

服务器启动的过程就是Spring读取解析XML文件，并且启动Spring IoC容器的过程。在Spring IoC容器启动的时候，会初始化XML中所定义的各种bean。

<nettyrpc:service/>标签对应的bean是NettyRpcService类对象。NettyRpcService实现了InitializingBean接口，因而在初始化时，会回调afterPropertiesSet方法，
将服务的具体实现类(ref)和过滤器(filter)打包成一个binder对象，放到Map里面，而Map中的键值是服务具体实现类实现的接口的名字。
即Key -> Value：interfaceName -> binder (ref + filter)

<nettyrpc:registry/>标签对应的bean是NettyRpcRegistry类对象。NettyRpcRegistry也实现了InitializingBean接口，在afterPropertiesSet方法中，
会根据配置，让服务器开始监听客户端发起rpc调用的ip地址和端口号。同时还会启动一个内置的小型Http服务器，来监听服务能力展示开放端口。用户可以通过
浏览器来查看服务器可以提供的所有服务。

同时，服务器还会根据配置配置的protocol属性，来选择对应的序列化协议。

另外，netty-rpc还支持JMX功能，即通过JConsole或者浏览器的形式，来对服务器各种方法调用的详情进行查看，比如方法被调用的次数，被调用的平均耗时，
调用失败的堆栈信息等。通过浏览器访问服务器各种方法调用的详情和前面的服务能力详情都是通过一个内置的小型Http服务器来实现。
