1.ExecutorCompletionService
2.Spring AOP 源码解析
3.单例模式（重点是Holder）
4.ClassLoader.loadClass(className)
5.ListenableFuture和Futures和FutureCallback
6.CGLIB和JDK动态代理的源码分析
7.枚举类
8.反射
9.enumMap
10.Java线程中断  ok
11.netty future.channel().closeFuture().sync(); 源代码分析

future = bootstrap.bind(host, port).sync();
future.addListener(new ChannelFutureListener() {
    //代码省略
});


要解决的问题：
1.Timeout request,NettyRPC server request timeout!

根据浏览器中JMX监控方法的调用结果，显示客户端发送的调用请求，服务器端都接收到了，并且方法也被成功调用了，但是方法的调用结果显然客户端没有接收到

2.方法调用次数累加的数据不对的问题

模块名称	            方法名称	                    调用次数	调用成功次数	调用失败次数	被过滤次数	
CostTimeCalculate	public CostTime calculate();	        6	        3	            0	            0			
AddCalculate	    public int add(int, int);	            3000	    3003	        0	            0		
MultiCalculate	    public int multi(int, int);	            3000	    3000	        0	            0

其中add和multi方法均被调用了3000次，而calculate方法被调用了6次，但是calculate确显示只成功调用了3次，而add方法成功调用了3003次，这说明
calculate方法统计数据有一部分给了add方法，有可能是visitor获取不正确导致的

要增加的功能：
1.增加自适应扩展的功能，也就是通过 javassist 编译器，生成一个 XXX$Adaptive 类对象

2.RpcException

3.url直连的功能

4.注册中心缓存的功能

5.优雅停机


